{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/compat get default export","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n\n  // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n  url = String(url.__esModule ? url.default : url);\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global document, Office, Word */\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Word || info.host === Office.HostType.Excel) {\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\n    document.getElementById(\"app-body\").style.display = \"flex\";\n    document.getElementById(\"sendDocument\").onclick = saveAsPdfAndDocumentToServer;\n    document.getElementById(\"fetchDocument\").onclick = fetchDocumentFromS3;\n    // document.getElementById(\"sendToNovacom\").onclick = saveAsPdfAndSendToBrowser;\n  }\n});\n\nconst urlField = document.getElementById(\"novacomUrl\");\n\nurlField.addEventListener(\"input\", (event) => {\n  const fetchDocumentButton = document.getElementById(\"fetchDocument\");\n\n  if (event.target.value.length === 0) {\n    fetchDocumentButton.style.display = \"none\";\n  }\n\n  if (event.target.value.length > 0) {\n    fetchDocumentButton.style.display = \"\";\n  }\n});\n\nasync function fetchDocumentFromS3() {\n  const officeHost = Office.context.host;\n\n  const s3Url = document.getElementById(\"novacomUrl\").value;\n\n  // Extract the file type from the URL\n  const urlParts = s3Url.split(\"/\");\n  const fileTypeFromUrl = urlParts[urlParts.length - 1].toLowerCase(); // Extract last part and convert to lowercase\n\n  if (!s3Url) {\n    return;\n  }\n\n  if (fileTypeFromUrl.toLowerCase() === \"pdf\" && officeHost.toLowerCase() !== \"word\") {\n    return;\n  }\n\n  if (fileTypeFromUrl.toLowerCase() !== \"pdf\" && fileTypeFromUrl.toLowerCase() !== officeHost.toLowerCase()) {\n    return;\n  }\n\n  try {\n    // Show backdrop while processing\n    const backdrop = document.getElementById(\"backdrop\");\n    backdrop.style.display = \"flex\";\n    const xhr = new XMLHttpRequest();\n\n    xhr.open(\"GET\", s3Url, true);\n\n    xhr.responseType = \"application/json\";\n\n    xhr.onload = function () {\n      if (xhr.status === 200) {\n        const data = xhr.response;\n\n        const parsedData = JSON.parse(data);\n        const base64 = parsedData.base64;\n\n        // Select the input element by its id\n        const inputElement = document.getElementById(\"nameOfDocument\");\n\n        // Enable the input field temporarily\n        inputElement.disabled = false;\n\n        // Set the value of the input element\n        inputElement.value = parsedData.name;\n\n        // Disable the input field again (if needed)\n        inputElement.disabled = true;\n\n        const sendDocumentButton = document.getElementById(\"sendDocument\");\n\n        sendDocumentButton.style.display = \"\";\n\n        if (fileTypeFromUrl === \"word\" || fileTypeFromUrl === \"pdf\") {\n          insertDocumentContent(base64);\n        }\n\n        if (fileTypeFromUrl === \"excel\") {\n          insertExcelContent(base64);\n        }\n      } else {\n        throw new Error(`Network response was not ok: ${xhr.statusText}`);\n      }\n    };\n\n    xhr.onerror = function () {\n      throw new Error(\"Failed to fetch document from S3\");\n    };\n\n    xhr.send();\n    backdrop.style.display = \"none\";\n  } catch (error) {\n    await insertErrorToDocument(error);\n    const backdrop = document.getElementById(\"backdrop\");\n    backdrop.style.display = \"none\";\n\n    console.error(\"Failed to fetch document from S3:\", error);\n  }\n}\n\nfunction arrayBufferToBase64(buffer) {\n  let binary = \"\";\n  const bytes = new Uint8Array(buffer);\n  const len = bytes.byteLength;\n\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n\n  return window.btoa(binary);\n}\n\nasync function insertDocumentContent(base64) {\n  try {\n    await Word.run(async (context) => {\n      const body = context.document.body;\n      body.insertFileFromBase64(base64, Word.InsertLocation.replace);\n      await context.sync();\n    });\n  } catch (error) {\n    await insertErrorToDocument(error.message);\n\n    console.error(\"Failed to insert document content:\", error);\n  }\n}\n\nasync function insertExcelContent(base64) {\n  try {\n    await Excel.run(async (context) => {\n      let workbook = context.workbook;\n\n      // Set up the insert options.\n      let options = {\n        sheetNamesToInsert: [], // Insert all the worksheets from the source workbook.\n        positionType: Excel.WorksheetPositionType.after, // Insert after the `relativeTo` sheet.\n        relativeTo: \"Sheet1\", // The sheet relative to which the other worksheets will be inserted. Used with `positionType`.\n      };\n\n      // Insert the new worksheets into the current workbook.\n      workbook.insertWorksheetsFromBase64(base64, options);\n      await context.sync();\n    });\n  } catch (error) {\n    await insertErrorToExcel(error.message);\n    console.error(\"Failed to insert Excel content:\", error);\n  }\n}\n\nasync function insertErrorToDocument(errorMessage) {\n  try {\n    await Word.run(async (context) => {\n      const body = context.document.body;\n      body.insertText(errorMessage, Word.InsertLocation.end);\n      await context.sync();\n    });\n  } catch (error) {\n    console.error(\"Failed to insert error message to document:\", error);\n  }\n}\n\nfunction getSliceAsync(file, nextSlice, sliceCount, gotAllSlices, docDataSlices, slicesReceived, resolve, blobType) {\n  file.getSliceAsync(nextSlice, function (sliceResult) {\n    if (sliceResult.status == \"succeeded\") {\n      if (!gotAllSlices) {\n        /* Failed to get all slices, no need to continue. */\n        return;\n      }\n\n      // Got one slice, store it in a temporary array.\n      // (Or you can do something else, such as\n      // send it to a third-party server.)\n      docDataSlices[sliceResult.value.index] = sliceResult.value.data;\n      if (++slicesReceived == sliceCount) {\n        // All slices have been received.\n        file.closeAsync();\n        const pdfBlob = onGotAllSlices(docDataSlices, blobType);\n\n        resolve(pdfBlob);\n      } else {\n        getSliceAsync(file, ++nextSlice, sliceCount, gotAllSlices, docDataSlices, slicesReceived, resolve, blobType);\n      }\n    } else {\n      gotAllSlices = false;\n      file.closeAsync();\n      app.showNotification(\"getSliceAsync Error:\", sliceResult.error.message);\n    }\n  });\n}\n\nfunction returnBlob(fileContent, blobType) {\n  // Convert binary string to Uint8Array\n  const len = fileContent.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = fileContent.charCodeAt(i);\n  }\n\n  // Determine the correct MIME type based on the blobType\n  let mimeType;\n  if (blobType === \"pdf\") {\n    mimeType = \"application/pdf\";\n  } else if (blobType === \"word\") {\n    mimeType = \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n  } else if (blobType === \"excel\") {\n    mimeType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n  } else {\n    throw new Error(\"Unsupported blob type\");\n  }\n\n  // Create a Blob from the Uint8Array\n  const blob = new Blob([bytes], { type: mimeType });\n\n  return blob;\n  // saveAs(blob, \"document.pdf\");\n}\n\nfunction returnWordBlob(fileContent) {\n  // Convert binary string to Uint8Array\n  const len = fileContent.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = fileContent.charCodeAt(i);\n  }\n\n  // Create a Blob from the Uint8Array\n  const wordBlob = new Blob([bytes], {\n    type: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n  });\n\n  return wordBlob;\n  // saveAs(blob, \"document.pdf\");\n}\n\nfunction onGotAllSlices(docDataSlices, blobType) {\n  let docData = [];\n  for (let i = 0; i < docDataSlices.length; i++) {\n    docData = docData.concat(docDataSlices[i]);\n  }\n\n  let fileContent = new String();\n  for (let j = 0; j < docData.length; j++) {\n    fileContent += String.fromCharCode(docData[j]);\n  }\n\n  // Now all the file content is stored in 'fileContent' variable,\n  // you can do something with it, such as print, fax...\n\n  const pdfBlob = returnBlob(fileContent, blobType);\n\n  return pdfBlob;\n}\n\n// Function to retrieve the Word document as a Blob\nconst getWordBlob = () => {\n  return new Promise((resolve, reject) => {\n    Office.context.document.getFileAsync(Office.FileType.Compressed, function (result) {\n      if (result.status == \"succeeded\") {\n        const myFile = result.value;\n        const sliceCount = myFile.sliceCount;\n\n        // Get the file slices.\n        const docDataSlices = [];\n        let slicesReceived = 0,\n          gotAllSlices = true;\n        getSliceAsync(myFile, 0, sliceCount, gotAllSlices, docDataSlices, slicesReceived, resolve, \"word\");\n\n        myFile.closeAsync();\n      } else {\n        reject(result.error);\n      }\n    });\n  });\n};\n\n// Function to retrieve the Word document as a Blob\nconst getExcelBlob = () => {\n  return new Promise((resolve, reject) => {\n    Office.context.document.getFileAsync(Office.FileType.Compressed, function (result) {\n      if (result.status == \"succeeded\") {\n        const myFile = result.value;\n        const sliceCount = myFile.sliceCount;\n\n        // Get the file slices.\n        const docDataSlices = [];\n        let slicesReceived = 0,\n          gotAllSlices = true;\n        getSliceAsync(myFile, 0, sliceCount, gotAllSlices, docDataSlices, slicesReceived, resolve, \"excel\");\n\n        myFile.closeAsync();\n      } else {\n        reject(result.error);\n      }\n    });\n  });\n};\n\n// Function to retrieve the PDF document as a Blob\nconst getPdfBlob = () => {\n  return new Promise((resolve, reject) => {\n    Office.context.document.getFileAsync(Office.FileType.Pdf, function (result) {\n      if (result.status == \"succeeded\") {\n        const myFile = result.value;\n        const sliceCount = myFile.sliceCount;\n\n        // Get the file slices.\n        const docDataSlices = [];\n        let slicesReceived = 0,\n          gotAllSlices = true;\n        getSliceAsync(myFile, 0, sliceCount, gotAllSlices, docDataSlices, slicesReceived, resolve, \"pdf\");\n\n        myFile.closeAsync();\n      } else {\n        reject(result.error);\n      }\n    });\n  });\n};\n\nconst saveAsPdfAndDocumentToServer = async () => {\n  const url = document.getElementById(\"novacomUrl\").value;\n\n  if (!url) {\n    return;\n  }\n\n  // Extract the file type from the URL\n  const urlParts = url.split(\"/\");\n  const fileTypeFromUrl = urlParts[urlParts.length - 1];\n\n  try {\n    // Show backdrop while processing\n    const backdrop = document.getElementById(\"backdrop\");\n    backdrop.style.display = \"flex\";\n\n    if (fileTypeFromUrl === \"WORD\" || fileTypeFromUrl === \"PDF\") {\n      // Retrieve Word and PDF blobs\n      const wordBlob = await getWordBlob();\n      const pdfBlob = await getPdfBlob();\n\n      const nameField = document.getElementById(\"nameOfDocument\");\n\n      await sendFilesToServer(pdfBlob, `${nameField.value}.pdf`, wordBlob, `${nameField.value}.docx`, url); // Assuming you have a function to handle server upload\n    }\n\n    if (fileTypeFromUrl === \"EXCEL\") {\n      // Retrieve Word and PDF blobs\n\n      const excelBlob = await getExcelBlob();\n\n      const nameField = document.getElementById(\"nameOfDocument\");\n\n      await sendExcelFileToServer(excelBlob, `${nameField.value}.xlsx`, url); // Assuming you have a function to handle server upload\n    }\n\n    // Hide backdrop after processing\n    backdrop.style.display = \"none\";\n  } catch (error) {\n    console.error(\"Error retrieving files:\", error);\n\n    const backdrop = document.getElementById(\"backdrop\");\n    backdrop.style.display = \"none\";\n    // Handle error\n  }\n};\n\nfunction sendFilesToServer(pdfBlob, pdfFileName, wordBlob, wordFileName, url) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n\n    xhr.open(\"POST\", url, true);\n\n    const formData = new FormData();\n\n    formData.append(\"pdf\", pdfBlob, pdfFileName);\n    formData.append(\"word\", wordBlob, wordFileName);\n\n    xhr.onload = function () {\n      if (xhr.status === 200) {\n        resolve(xhr.responseText); // Resolve with server response on success\n      } else {\n        reject(new Error(`XHR failed with status ${xhr.status}`)); // Reject with error on failure\n      }\n    };\n\n    xhr.onerror = function () {\n      reject(new Error(\"Network error during XHR\")); // Reject with network error\n    };\n\n    // Send the Blob as the request body\n    xhr.send(formData);\n  });\n}\n\nfunction sendExcelFileToServer(excelFile, excelFileName, url) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n\n    xhr.open(\"POST\", url, true);\n\n    const formData = new FormData();\n\n    formData.append(\"excel\", excelFile, excelFileName);\n\n    xhr.onload = function () {\n      if (xhr.status === 200) {\n        resolve(xhr.responseText); // Resolve with server response on success\n      } else {\n        reject(new Error(`XHR failed with status ${xhr.status}`)); // Reject with error on failure\n      }\n    };\n\n    xhr.onerror = function () {\n      reject(new Error(\"Network error during XHR\")); // Reject with network error\n    };\n\n    // Send the Blob as the request body\n    xhr.send(formData);\n  });\n}\n","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../../assets/novacomIcon.svg\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar ___HTML_LOADER_REPLACEMENT_1___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_1___);\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"/> <title>Novacom Office addin for IKMS app</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\"> <img width=\\\"157\\\" height=\\\"22\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_1___ + \"\\\" alt=\\\"Contoso\\\" title=\\\"Contoso\\\"/> <h1 class=\\\"ms-font-su\\\" style=\\\"font-size:22px\\\">Welcome</h1> </header> <div id=\\\"backdrop\\\" class=\\\"backdrop\\\" style=\\\"display:none\\\"> <div class=\\\"loader\\\"></div> </div> <section id=\\\"sideload-msg\\\" class=\\\"ms-welcome__main\\\"> <h2 class=\\\"ms-font-xl\\\"> Please <a target=\\\"_blank\\\" href=\\\"https://learn.microsoft.com/office/dev/add-ins/testing/test-debug-office-add-ins#sideload-an-office-add-in-for-testing\\\">sideload</a> your add-in to see app body. </h2> </section> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\" style=\\\"display:none\\\"> <p><label id=\\\"item-subject\\\"></label></p> <input type=\\\"text\\\" id=\\\"novacomUrl\\\" placeholder=\\\"Enter Novacom Url\\\" class=\\\"ms-TextField-field\\\" style=\\\"margin-bottom:10px;width:98%;margin-left:10px;margin-right:10px\\\"/> <input type=\\\"text\\\" id=\\\"nameOfDocument\\\" placeholder=\\\"Document name will appear here\\\" class=\\\"ms-TextField-field\\\" style=\\\"margin-bottom:10px;width:98%;margin-left:10px;margin-right:10px\\\" disabled=\\\"disabled\\\"/> <div style=\\\"display:flex;justify-content:space-between;align-items:center;width:100%;margin-left:10px;margin-right:10px\\\"> <button id=\\\"fetchDocument\\\" class=\\\"ms-Button ms-Button--primary\\\" style=\\\"margin:0;padding:0;width:120px;height:32.5px;display:none\\\"> Get Document </button> <button id=\\\"sendDocument\\\" class=\\\"ms-Button ms-Button--primary\\\" style=\\\"margin:0;padding:0;width:120px;height:32.5px;display:none\\\"> Save Document </button> </div> </main> </body> </html> \";\n// Exports\nexport default code;"],"names":["module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","baseURI","self","href","_regeneratorRuntime","t","r","value","Symbol","iterator","c","asyncIterator","u","toStringTag","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","values","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","fetchDocumentFromS3","_fetchDocumentFromS","_callee2","officeHost","s3Url","urlParts","fileTypeFromUrl","backdrop","xhr","_context2","Office","context","host","getElementById","split","toLowerCase","style","display","XMLHttpRequest","open","responseType","onload","status","statusText","data","response","parsedData","JSON","parse","base64","inputElement","disabled","insertDocumentContent","insertExcelContent","onerror","send","t0","insertErrorToDocument","console","error","_x","_insertDocumentContent","_callee4","_context4","Word","run","_ref2","_callee3","_context3","body","insertFileFromBase64","InsertLocation","sync","_x4","message","_x2","_insertExcelContent","_callee6","_context6","Excel","_ref3","_callee5","workbook","_context5","sheetNamesToInsert","positionType","WorksheetPositionType","after","relativeTo","insertWorksheetsFromBase64","_x5","insertErrorToExcel","_x3","_insertErrorToDocument","_callee8","errorMessage","_context8","_ref4","_callee7","_context7","insertText","end","_x6","getSliceAsync","file","nextSlice","sliceCount","gotAllSlices","docDataSlices","slicesReceived","blobType","sliceResult","index","closeAsync","pdfBlob","docData","fileContent","j","fromCharCode","mimeType","len","bytes","Uint8Array","charCodeAt","Blob","returnBlob","onGotAllSlices","app","showNotification","onReady","info","HostType","onclick","saveAsPdfAndDocumentToServer","addEventListener","event","fetchDocumentButton","target","_ref","_callee","wordBlob","nameField","excelBlob","_nameField","_context","reject","getFileAsync","FileType","Compressed","result","myFile","Pdf","sendFilesToServer","sendExcelFileToServer","pdfFileName","wordFileName","formData","FormData","append","responseText","excelFile","excelFileName","___HTML_LOADER_IMPORT_0___","URL","___HTML_LOADER_IMPORT_1___"],"sourceRoot":""}