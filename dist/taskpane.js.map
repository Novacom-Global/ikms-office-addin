{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/compat get default export","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/make namespace object","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n\n  // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n  url = String(url.__esModule ? url.default : url);\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"taskpane\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global document, Office, Word */\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Word || info.host === Office.HostType.Excel) {\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\n    document.getElementById(\"app-body\").style.display = \"flex\";\n    document.getElementById(\"sendDocument\").onclick = saveAsPdfAndDocumentToServer;\n    document.getElementById(\"fetchDocument\").onclick = fetchDocumentFromS3;\n    // document.getElementById(\"sendToNovacom\").onclick = saveAsPdfAndSendToBrowser;\n  }\n});\n\nconst urlField = document.getElementById(\"novacomUrl\");\n\nurlField.addEventListener(\"input\", (event) => {\n  const fetchDocumentButton = document.getElementById(\"fetchDocument\");\n\n  if (event.target.value.length === 0) {\n    fetchDocumentButton.style.display = \"none\";\n  }\n\n  if (event.target.value.length > 0) {\n    fetchDocumentButton.style.display = \"\";\n  }\n});\n\nasync function fetchDocumentFromS3() {\n  const officeHost = Office.context.host;\n\n  const s3Url = document.getElementById(\"novacomUrl\").value;\n\n  // Extract the file type from the URL\n  const urlParts = s3Url.split(\"/\");\n  const fileTypeFromUrl = urlParts[urlParts.length - 1].toLowerCase(); // Extract last part and convert to lowercase\n\n  if (!s3Url) {\n    return;\n  }\n\n  if (fileTypeFromUrl.toLowerCase() === \"pdf\" && officeHost.toLowerCase() !== \"word\") {\n    return;\n  }\n\n  if (fileTypeFromUrl.toLowerCase() !== \"pdf\" && fileTypeFromUrl.toLowerCase() !== officeHost.toLowerCase()) {\n    return;\n  }\n\n  try {\n    // Show backdrop while processing\n    const backdrop = document.getElementById(\"backdrop\");\n    backdrop.style.display = \"flex\";\n    const xhr = new XMLHttpRequest();\n\n    xhr.open(\"GET\", s3Url, true);\n\n    xhr.responseType = \"application/json\";\n\n    xhr.onload = function () {\n      if (xhr.status === 200) {\n        const data = xhr.response;\n\n        const parsedData = JSON.parse(data);\n        const base64 = parsedData.base64;\n\n        // Select the input element by its id\n        const inputElement = document.getElementById(\"nameOfDocument\");\n\n        // Enable the input field temporarily\n        inputElement.disabled = false;\n\n        // Set the value of the input element\n        inputElement.value = parsedData.name;\n\n        // Disable the input field again (if needed)\n        inputElement.disabled = true;\n\n        const sendDocumentButton = document.getElementById(\"sendDocument\");\n\n        sendDocumentButton.style.display = \"\";\n\n        if (fileTypeFromUrl === \"word\" || fileTypeFromUrl === \"pdf\") {\n          insertDocumentContent(base64);\n        }\n\n        if (fileTypeFromUrl === \"excel\") {\n          insertExcelContent(base64);\n        }\n      } else {\n        throw new Error(`Network response was not ok: ${xhr.statusText}`);\n      }\n    };\n\n    xhr.onerror = function () {\n      throw new Error(\"Failed to fetch document from S3\");\n    };\n\n    xhr.send();\n    backdrop.style.display = \"none\";\n  } catch (error) {\n    await insertErrorToDocument(error);\n    const backdrop = document.getElementById(\"backdrop\");\n    backdrop.style.display = \"none\";\n\n    console.error(\"Failed to fetch document from S3:\", error);\n  }\n}\n\nfunction arrayBufferToBase64(buffer) {\n  let binary = \"\";\n  const bytes = new Uint8Array(buffer);\n  const len = bytes.byteLength;\n\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n\n  return window.btoa(binary);\n}\n\nasync function insertDocumentContent(base64) {\n  try {\n    await Word.run(async (context) => {\n      const body = context.document.body;\n      body.insertFileFromBase64(base64, Word.InsertLocation.replace);\n      await context.sync();\n    });\n  } catch (error) {\n    await insertErrorToDocument(error.message);\n\n    console.error(\"Failed to insert document content:\", error);\n  }\n}\n\nasync function insertExcelContent(base64) {\n  try {\n    await Excel.run(async (context) => {\n      let workbook = context.workbook;\n\n      // Set up the insert options.\n      let options = {\n        sheetNamesToInsert: [], // Insert all the worksheets from the source workbook.\n        positionType: Excel.WorksheetPositionType.after, // Insert after the `relativeTo` sheet.\n        relativeTo: \"Sheet1\", // The sheet relative to which the other worksheets will be inserted. Used with `positionType`.\n      };\n\n      // Insert the new worksheets into the current workbook.\n      workbook.insertWorksheetsFromBase64(base64, options);\n      await context.sync();\n    });\n  } catch (error) {\n    await insertErrorToExcel(error.message);\n    console.error(\"Failed to insert Excel content:\", error);\n  }\n}\n\nasync function insertErrorToDocument(errorMessage) {\n  try {\n    await Word.run(async (context) => {\n      const body = context.document.body;\n      body.insertText(errorMessage, Word.InsertLocation.end);\n      await context.sync();\n    });\n  } catch (error) {\n    console.error(\"Failed to insert error message to document:\", error);\n  }\n}\n\nfunction getSliceAsync(file, nextSlice, sliceCount, gotAllSlices, docDataSlices, slicesReceived, resolve, blobType) {\n  file.getSliceAsync(nextSlice, function (sliceResult) {\n    if (sliceResult.status == \"succeeded\") {\n      if (!gotAllSlices) {\n        /* Failed to get all slices, no need to continue. */\n        return;\n      }\n\n      // Got one slice, store it in a temporary array.\n      // (Or you can do something else, such as\n      // send it to a third-party server.)\n      docDataSlices[sliceResult.value.index] = sliceResult.value.data;\n      if (++slicesReceived == sliceCount) {\n        // All slices have been received.\n        file.closeAsync();\n        const pdfBlob = onGotAllSlices(docDataSlices, blobType);\n\n        resolve(pdfBlob);\n      } else {\n        getSliceAsync(file, ++nextSlice, sliceCount, gotAllSlices, docDataSlices, slicesReceived, resolve, blobType);\n      }\n    } else {\n      gotAllSlices = false;\n      file.closeAsync();\n      app.showNotification(\"getSliceAsync Error:\", sliceResult.error.message);\n    }\n  });\n}\n\nfunction returnBlob(fileContent, blobType) {\n  // Convert binary string to Uint8Array\n  const len = fileContent.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = fileContent.charCodeAt(i);\n  }\n\n  // Determine the correct MIME type based on the blobType\n  let mimeType;\n  if (blobType === \"pdf\") {\n    mimeType = \"application/pdf\";\n  } else if (blobType === \"word\") {\n    mimeType = \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n  } else if (blobType === \"excel\") {\n    mimeType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n  } else {\n    throw new Error(\"Unsupported blob type\");\n  }\n\n  // Create a Blob from the Uint8Array\n  const blob = new Blob([bytes], { type: mimeType });\n\n  return blob;\n  // saveAs(blob, \"document.pdf\");\n}\n\nfunction returnWordBlob(fileContent) {\n  // Convert binary string to Uint8Array\n  const len = fileContent.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = fileContent.charCodeAt(i);\n  }\n\n  // Create a Blob from the Uint8Array\n  const wordBlob = new Blob([bytes], {\n    type: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n  });\n\n  return wordBlob;\n  // saveAs(blob, \"document.pdf\");\n}\n\nfunction onGotAllSlices(docDataSlices, blobType) {\n  let docData = [];\n  for (let i = 0; i < docDataSlices.length; i++) {\n    docData = docData.concat(docDataSlices[i]);\n  }\n\n  let fileContent = new String();\n  for (let j = 0; j < docData.length; j++) {\n    fileContent += String.fromCharCode(docData[j]);\n  }\n\n  // Now all the file content is stored in 'fileContent' variable,\n  // you can do something with it, such as print, fax...\n\n  const pdfBlob = returnBlob(fileContent, blobType);\n\n  return pdfBlob;\n}\n\n// Function to retrieve the Word document as a Blob\nconst getWordBlob = () => {\n  return new Promise((resolve, reject) => {\n    Office.context.document.getFileAsync(Office.FileType.Compressed, function (result) {\n      if (result.status == \"succeeded\") {\n        const myFile = result.value;\n        const sliceCount = myFile.sliceCount;\n\n        // Get the file slices.\n        const docDataSlices = [];\n        let slicesReceived = 0,\n          gotAllSlices = true;\n        getSliceAsync(myFile, 0, sliceCount, gotAllSlices, docDataSlices, slicesReceived, resolve, \"word\");\n\n        myFile.closeAsync();\n      } else {\n        reject(result.error);\n      }\n    });\n  });\n};\n\n// Function to retrieve the Word document as a Blob\nconst getExcelBlob = () => {\n  return new Promise((resolve, reject) => {\n    Office.context.document.getFileAsync(Office.FileType.Compressed, function (result) {\n      if (result.status == \"succeeded\") {\n        const myFile = result.value;\n        const sliceCount = myFile.sliceCount;\n\n        // Get the file slices.\n        const docDataSlices = [];\n        let slicesReceived = 0,\n          gotAllSlices = true;\n        getSliceAsync(myFile, 0, sliceCount, gotAllSlices, docDataSlices, slicesReceived, resolve, \"excel\");\n\n        myFile.closeAsync();\n      } else {\n        reject(result.error);\n      }\n    });\n  });\n};\n\n// Function to retrieve the PDF document as a Blob\nconst getPdfBlob = () => {\n  return new Promise((resolve, reject) => {\n    Office.context.document.getFileAsync(Office.FileType.Pdf, function (result) {\n      if (result.status == \"succeeded\") {\n        const myFile = result.value;\n        const sliceCount = myFile.sliceCount;\n\n        // Get the file slices.\n        const docDataSlices = [];\n        let slicesReceived = 0,\n          gotAllSlices = true;\n        getSliceAsync(myFile, 0, sliceCount, gotAllSlices, docDataSlices, slicesReceived, resolve, \"pdf\");\n\n        myFile.closeAsync();\n      } else {\n        reject(result.error);\n      }\n    });\n  });\n};\n\nconst saveAsPdfAndDocumentToServer = async () => {\n  const url = document.getElementById(\"novacomUrl\").value;\n\n  if (!url) {\n    return;\n  }\n\n  // Extract the file type from the URL\n  const urlParts = url.split(\"/\");\n  const fileTypeFromUrl = urlParts[urlParts.length - 1];\n\n  try {\n    // Show backdrop while processing\n    const backdrop = document.getElementById(\"backdrop\");\n    backdrop.style.display = \"flex\";\n\n    if (fileTypeFromUrl === \"WORD\" || fileTypeFromUrl === \"PDF\") {\n      // Retrieve Word and PDF blobs\n      const wordBlob = await getWordBlob();\n      const pdfBlob = await getPdfBlob();\n\n      const nameField = document.getElementById(\"nameOfDocument\");\n\n      await sendFilesToServer(pdfBlob, `${nameField.value}.pdf`, wordBlob, `${nameField.value}.docx`, url); // Assuming you have a function to handle server upload\n    }\n\n    if (fileTypeFromUrl === \"EXCEL\") {\n      // Retrieve Word and PDF blobs\n\n      const excelBlob = await getExcelBlob();\n\n      const nameField = document.getElementById(\"nameOfDocument\");\n\n      await sendExcelFileToServer(excelBlob, `${nameField.value}.xlsx`, url); // Assuming you have a function to handle server upload\n    }\n\n    // Hide backdrop after processing\n    backdrop.style.display = \"none\";\n  } catch (error) {\n    console.error(\"Error retrieving files:\", error);\n\n    const backdrop = document.getElementById(\"backdrop\");\n    backdrop.style.display = \"none\";\n    // Handle error\n  }\n};\n\nfunction sendFilesToServer(pdfBlob, pdfFileName, wordBlob, wordFileName, url) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n\n    xhr.open(\"POST\", url, true);\n\n    const formData = new FormData();\n\n    formData.append(\"pdf\", pdfBlob, pdfFileName);\n    formData.append(\"word\", wordBlob, wordFileName);\n\n    xhr.onload = function () {\n      if (xhr.status === 200) {\n        resolve(xhr.responseText); // Resolve with server response on success\n      } else {\n        reject(new Error(`XHR failed with status ${xhr.status}`)); // Reject with error on failure\n      }\n    };\n\n    xhr.onerror = function () {\n      reject(new Error(\"Network error during XHR\")); // Reject with network error\n    };\n\n    // Send the Blob as the request body\n    xhr.send(formData);\n  });\n}\n\nfunction sendExcelFileToServer(excelFile, excelFileName, url) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n\n    xhr.open(\"POST\", url, true);\n\n    const formData = new FormData();\n\n    formData.append(\"excel\", excelFile, excelFileName);\n\n    xhr.onload = function () {\n      if (xhr.status === 200) {\n        resolve(xhr.responseText); // Resolve with server response on success\n      } else {\n        reject(new Error(`XHR failed with status ${xhr.status}`)); // Reject with error on failure\n      }\n    };\n\n    xhr.onerror = function () {\n      reject(new Error(\"Network error during XHR\")); // Reject with network error\n    };\n\n    // Send the Blob as the request body\n    xhr.send(formData);\n  });\n}\n","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../../assets/novacomIcon.svg\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar ___HTML_LOADER_REPLACEMENT_1___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_1___);\nvar code = \"<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. -->\\n<!-- This file shows how to design a first-run page that provides a welcome screen to the user about the features of the add-in. -->\\n\\n<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta charset=\\\"UTF-8\\\" />\\n    <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\" />\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n    <title>Novacom Office addin for IKMS app</title>\\n\\n    <!-- Office JavaScript API -->\\n    <\" + \"script type=\\\"text/javascript\\\" src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script>\\n\\n    <\" + \"script src=\\\"https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js\\\"><\" + \"/script>\\n\\n    <!-- For more information on Fluent UI, visit https://developer.microsoft.com/fluentui#/. -->\\n    <link\\n      rel=\\\"stylesheet\\\"\\n      href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css\\\"\\n    />\\n\\n    <!-- Template styles -->\\n    <link href=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" rel=\\\"stylesheet\\\" type=\\\"text/css\\\" />\\n  </head>\\n\\n  <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\">\\n    <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\">\\n      <!-- <div class=\\\"logo-container\\\"> -->\\n      <img width=\\\"157\\\" height=\\\"22\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_1___ + \"\\\" alt=\\\"Contoso\\\" title=\\\"Contoso\\\" />\\n      <!-- </div> -->\\n      <h1 class=\\\"ms-font-su\\\" style=\\\"font-size: 22px\\\">Welcome</h1>\\n    </header>\\n\\n    <!-- Backdrop and loading indicator -->\\n    <div id=\\\"backdrop\\\" class=\\\"backdrop\\\" style=\\\"display: none\\\">\\n      <div class=\\\"loader\\\"></div>\\n    </div>\\n\\n    <section id=\\\"sideload-msg\\\" class=\\\"ms-welcome__main\\\">\\n      <h2 class=\\\"ms-font-xl\\\">\\n        Please\\n        <a\\n          target=\\\"_blank\\\"\\n          href=\\\"https://learn.microsoft.com/office/dev/add-ins/testing/test-debug-office-add-ins#sideload-an-office-add-in-for-testing\\\"\\n          >sideload</a\\n        >\\n        your add-in to see app body.\\n      </h2>\\n    </section>\\n    <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\" style=\\\"display: none\\\">\\n      <p><label id=\\\"item-subject\\\"></label></p>\\n      <input\\n        type=\\\"text\\\"\\n        id=\\\"novacomUrl\\\"\\n        placeholder=\\\"Enter Novacom Url\\\"\\n        class=\\\"ms-TextField-field\\\"\\n        style=\\\"margin-bottom: 10px; width: 98%; margin-left: 10px; margin-right: 10px\\\"\\n      />\\n      <input\\n        type=\\\"text\\\"\\n        id=\\\"nameOfDocument\\\"\\n        placeholder=\\\"Document name will appear here\\\"\\n        class=\\\"ms-TextField-field\\\"\\n        style=\\\"margin-bottom: 10px; width: 98%; margin-left: 10px; margin-right: 10px\\\"\\n        disabled\\n      />\\n      <div\\n        style=\\\"\\n          display: flex;\\n          justify-content: space-between;\\n          align-items: center;\\n          width: 100%;\\n          margin-left: 10px;\\n          margin-right: 10px;\\n        \\\"\\n      >\\n        <button\\n          id=\\\"fetchDocument\\\"\\n          class=\\\"ms-Button ms-Button--primary\\\"\\n          style=\\\"margin: 0px; padding: 0px; width: 120px; height: 32.5px; display: none\\\"\\n        >\\n          Get Document\\n        </button>\\n\\n        <button\\n          id=\\\"sendDocument\\\"\\n          class=\\\"ms-Button ms-Button--primary\\\"\\n          style=\\\"margin: 0px; padding: 0px; width: 120px; height: 32.5px; display: none\\\"\\n        >\\n          Save Document\\n        </button>\\n      </div>\\n    </main>\\n  </body>\\n</html>\\n\";\n// Exports\nexport default code;"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","Office","onReady","info","host","HostType","Word","Excel","document","getElementById","style","display","onclick","saveAsPdfAndDocumentToServer","fetchDocumentFromS3","urlField","addEventListener","event","fetchDocumentButton","target","_fetchDocumentFromS","_callee2","officeHost","s3Url","urlParts","fileTypeFromUrl","backdrop","xhr","_backdrop2","_callee2$","_context2","context","split","toLowerCase","XMLHttpRequest","open","responseType","onload","status","data","response","parsedData","JSON","parse","base64","inputElement","disabled","sendDocumentButton","insertDocumentContent","insertExcelContent","concat","statusText","onerror","send","t0","insertErrorToDocument","console","error","arrayBufferToBase64","buffer","binary","bytes","Uint8Array","len","byteLength","String","fromCharCode","window","btoa","_x","_insertDocumentContent","_callee4","_callee4$","_context4","run","_ref2","_callee3","body","_callee3$","_context3","insertFileFromBase64","InsertLocation","replace","sync","_x4","message","_x2","_insertExcelContent","_callee6","_callee6$","_context6","_ref3","_callee5","workbook","options","_callee5$","_context5","sheetNamesToInsert","positionType","WorksheetPositionType","after","relativeTo","insertWorksheetsFromBase64","_x5","insertErrorToExcel","_x3","_insertErrorToDocument","_callee8","errorMessage","_callee8$","_context8","_ref4","_callee7","_callee7$","_context7","insertText","end","_x6","getSliceAsync","file","nextSlice","sliceCount","gotAllSlices","docDataSlices","slicesReceived","blobType","sliceResult","index","closeAsync","pdfBlob","onGotAllSlices","app","showNotification","returnBlob","fileContent","charCodeAt","mimeType","blob","Blob","returnWordBlob","wordBlob","docData","j","getWordBlob","reject","getFileAsync","FileType","Compressed","result","myFile","getExcelBlob","getPdfBlob","Pdf","_ref","_callee","url","nameField","excelBlob","_nameField","_backdrop","_callee$","_context","sendFilesToServer","sendExcelFileToServer","pdfFileName","wordFileName","formData","FormData","append","responseText","excelFile","excelFileName"],"sourceRoot":""}